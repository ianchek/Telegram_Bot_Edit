import os
from handlers import TOKEN
from aiogram import Bot, Dispatcher, executor, types
import keyboards as kb
import classes as cl
from aiogram.types import InputFile

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def process_hello(message: types.File):
    id = message.chat.id
    await message.answer('–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏?üòÄ', reply_markup=kb.m1)
    await bot.send_audio(chat_id=id, audio=cl.a)

@dp.message_handler()
async def process_hello(message: types.File):
    if message.text == '–ü–æ–∏—Å–∫ –ø–æ –∂–∞–Ω—Ä—É':
        await message.answer('–í–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∂–∞–Ω—Ä—ã', reply_markup=kb.m2)
    elif message.text == '–ü–æ–∏—Å–∫ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é':
        await message.answer('–í–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏', reply_markup=kb.m3)
    elif message.text == 'PORCHY':
        for x in range(0, 4):
            if cl.spis[x].art == 'PORCHY':
                await bot.send_audio(chat_id=id, audio=InputFile(os.path.realpath(cl.spis[x].put.get_file().name)))
            if cl.spis[x].art == 'Blaze':
                await bot.send_audio(chat_id=id, audio=InputFile(os.path.realpath(cl.spis[x].put.get_file().name)))

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
